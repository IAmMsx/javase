ststic

1. static 静态的
2. 可以修饰 属性、方法、代码块、内部类

3.使用static修饰属性：静态变量（类变量）
    3.1 属性：按照是否使用static修饰，分为静态属性与非静态属性（实例变量）
        实例变量：创建了类中的多个对象，每个对象都独立拥有一套类中的非静态属性，修改一个对象中的
                非静态属性时，不会导致其他对象中的同样属性值被修改。
        静态变量：多个对象同享同一个静态变量，某一个对象修改静态变量，其他对象调用此静态变量是修改过的
    3.2 static 其他说明：
        ① 静态变量随着类加载而加载
        ② 静态变量加载早于对象的创建
        ③ 由于类只加载一次，静态变量在内存中也只会存在一份，存在于方法区的静态域中
        ④       类变量     实例变量
        类       yes         no
        对象     yes         yes
    3.3 静态变量举例：System.out   Math.PI

4. static修饰方法：静态方法：
    ① 随着类的加载而加载，可以通过”类.静态方法“的方式进行调用
    ②       静态方法     非静态方法
    类        yes         no
    对象      yes         yes
    ③ 静态方法中只能调用静态的方法或属性
       非静态方法中，可以调用静态方法或属性，也可以使用非静态方法与属性

5. static注意点：
    5.1 静态方法中，不能用this关键字，super关键字
    5.2 从生命周期的角度中去理解

6. 开发中如何确定一个属性是否要声明为static：
    > 属性可以被多个对象共享，不会随着对象不同而不同
    > 类中的常量常常声明为static

7. 开发中如何确定一个方法是否要声明为static：
    > 操作静态属性的方法通常设置为static的
    > 工具类中方法习惯声明为static

static修饰的属性相较于实例变量有哪些特别之处：
随着类的加载而加载、早于对象的创建、权限允许的情况下可以通过 对象.属性的方法调用、存在于方法区的静态域