接口的使用:

1. 接口使用interface来定义
2. JAVA接口和类是两个结构
3. 如何定义接口，定义接口中的成员
    3.1 JDK7.0及以前：只能定义全局变量和抽象方法
        > 全局常量：public static final 书写时可以省略
        > 抽象方法：public abstract

    3.2 JDK8.0：还可以定义静态方法、默认方法
        > 接口中的静态方法只能通过接口来调用
        > 通过实现类的对象，可以调用接口中的默认方法
        > 如果实现类中重写接口中的默认方法，调用时仍然调用的是重写的方法
        > 如果子类（实现类）继承的父类和实现的接口中声明了同名同参数的方法---》类优先原则
        > 如果实现类实现了多个接口，多个接口中定义了同名同参的方法
          若实现类中没有重写，报错---》接口冲突
          因此这种情况下必须在实现类中重写此方法

4. 接口中不能定义构造器，意味着接口不能实例化

5. JAVA开发，接口通过让类实现implements的方式来实现
    如果实现类类覆盖了接口中的所有抽象方法，则此类可以实例化
    如果实现类没有覆盖接口中的抽象方法，则此实现类仍为一个抽象类

6. JAVA类可以实现多个接口 弥补了单继承的巨侠逆行

7. 接口可以继承接口，并且可以多继承


*******************************************************

抽象类和接口的共同点与区别：
相同点：不能实例化，都可以被继承，
不同点：
    1. 一个类可以实现多个接口，但是一个类只能有一个父类，因此接口可以间接实现多重继承
    2. 抽象类中可以有构造器，用于子类调用，接口中无构造器
    3. 接口中只能由public static final全局常量和public abstract抽象方法，JDK8之后可以有静态方法和默认方法
    4. 抽象类强调所属关系，接口强调特定功能实现