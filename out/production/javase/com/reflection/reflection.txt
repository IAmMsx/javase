反射：

一、
        反射是被视为动态语言的关键，反射机制允许程序在执行期借助Reflection API取得任何类的内部信息，并能
    直接操作任意对象的内部属性与方法。

    正常方式：引入“包类”名称->通过new实例化->取得实例化对象
    反射方式：实例化对象->getClass()方法->得到完整的“包类”名称

    问题：
    1. 通过直接new的方式或反射的方式都可以调用公共的结构，开发中到底用哪个？
        建议直接用new的方式
    2. 什么时候会使用反射的方式：反射的特征，动态性
    3. 反射机制与面向对象中的封装性是不是矛盾的？如何看待两个技术？
        不矛盾。

二 、关于java.lang.Class类的理解：
    1. 类的加载过程
        程序经过javac.exe命令以后会生成一个或多个字节码文件（.class结尾）。
        接着我们使用java.exe文件对某个字节码文件解释运行，相当于将某个字节码文件加载到内存中，此过程称为类的加载
        加载到内存中的类，我们称为运行时类，此运行时类就作为Class的一个实例
        // 万事万物皆对象 对象.xxx ，File,URL,反射，前端，数据库
    2. 换句话说，Class的实例就对应一个运行时类
    3. 加载到内存中的运行时类，会缓存一段时间，在此时间我们可以通过不同的方式来获取此类

    哪些类型可以有Class对象？
    1.class、interface接口、[]数组、enum枚举、annotation注解、primitive type基本数据类型、void

